{"version":3,"file":"static/js/917.644ceca6.chunk.js","mappings":"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","sources":["components/ProgressBar/Styles.ts","components/ProgressBar/ProgressBar.tsx","common/yupLocale.ts","pages/Test/form.ts","pages/Test/constants.ts","pages/Test/Styles.ts","pages/Test/Test.tsx"],"sourcesContent":["import {styled} from '@mui/material/styles';\n\nexport const ProgressBar = styled('div')(({ backgroundColor }: {backgroundColor: string}) => ({\n  width: 75,\n  height: 5,\n  backgroundColor: backgroundColor,\n  borderRadius: 30,\n  transition: \"background-color 0.3s\",\n}));","import { Stack } from '@mui/material';\nimport {ProgressBar as ProgressBarStyled} from './Styles';\n\ntype Props = {\n  colors: string[];\n};\n\nconst ProgressBar: React.FC<Props> = ({ colors }) => {\n  return (\n    <Stack spacing={{ xs: 1, sm: 2 }} direction=\"row\">\n        <ProgressBarStyled backgroundColor={colors[0]} />\n        <ProgressBarStyled backgroundColor={colors[1]} />\n        <ProgressBarStyled backgroundColor={colors[2]} />\n    </Stack>\n  );\n};\n\nexport default ProgressBar;","import {setLocale} from 'yup';\nimport i18n from './i18n';\n\nsetLocale({\n    mixed: {\n        required: () => i18n.t('validation:required'),\n    },\n    string: {\n        min: ({min}) => i18n.t('validation:min', {min}),\n    },\n});","import {object, string} from 'yup';\nimport '../../common/yupLocale';\n\nconst strongPattern = /^(?=.*\\d)(?=.*[a-zA-Z])(?=.*[\\W_])[\\w\\W]+$/;\nconst mediumPattern = /(?=.*\\d)(?=.*[a-zA-Z])|(?=.*\\d)(?=.*[^\\w\\s])|(?=.*[a-zA-Z])(?=.*[^a-zA-Z0-9\\s])/;\n\nexport const defaultValues = {\n  password: '',\n};\n\nexport const validation = object().shape({\n  password: string()\n    .required()\n    .min(8)\n    .test(\n      'password-strength',\n      'easy',\n      function (value: string) {\n        if (strongPattern.test(value)) {\n          return true;\n        };\n        \n        if (mediumPattern.test(value)) {\n          return this.createError({\n            message: 'medium',\n          });\n        };\n      }\n    ),\n});\n","export const progress = {\n  default: [\"gray\", \"gray\", \"gray\"],\n  min: ['red', 'red', 'red'],\n  easy: ['red', 'gray', 'gray'],\n  medium: ['yellow', 'yellow', 'gray'],\n  strong: ['green', 'green', 'green'],\n}","import {styled} from '@mui/material';\n\nexport const TestSection = styled('section')(() => ({\n  position: 'absolute',\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\"\n}));","import { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useTranslation } from \"react-i18next\";\nimport { Input, Button, Typography, Stack } from '@mui/material';\n\nimport ProgressBar from \"../../components/ProgressBar/ProgressBar\";\n\nimport { defaultValues, validation } from \"./form\";\nimport { progress } from \"./constants\";\nimport { TestSection } from \"./Styles\";\n\nconst Test = () => {\n  const {t} = useTranslation();\n  const [values, setValues] = useState(progress.default);\n  const [message, setMessage] = useState('Easy');\n\n  const {register, formState: {errors, isValid}, reset } = useForm({\n    mode: \"onChange\",\n    resolver: yupResolver(validation),\n    defaultValues,\n  });\n\n  useEffect(() => {\n    if (isValid) {\n      setValues(progress.strong);\n      setMessage(t('validation:strong'));\n    \n      return;\n    }\n\n    setValues(() => {\n      const message = errors.password?.message;\n      const type = errors.password?.type;\n\n      if (type === 'min') {\n        setMessage(t('validation:min'));\n    \n        return progress.min;\n      } else if (message === 'easy') {\n        setMessage(t('validation:easy'));\n    \n        return progress.easy;\n      } else if (message === 'medium') {\n        setMessage(t('validation:medium'));\n\n        return progress.medium;\n      } else {\n        setMessage(t('validation:required'));\n      \n        return progress.default;\n      }\n    });\n  }, [errors.password, isValid, t]);\n\n  return (\n    <TestSection>\n      <Stack spacing={{ xs: 2 }} alignItems=\"center\" justifyContent=\"center\">\n          <Input\n            {...register(\"password\")}\n            type=\"password\"\n            name=\"password\"\n            size=\"medium\"\n            autoFocus\n          />\n\n        <ProgressBar colors={values} />\n\n        <Typography variant=\"subtitle1\" color={values[1]} align=\"center\">\n          {message}\n        </Typography>\n\n        {<Button\n          disabled={!isValid}\n          onClick={() => reset()}\n        >\n          {t('clear')}\n        </Button>}\n      </Stack>\n    </TestSection>\n  );\n};\n\nexport default Test;"],"names":["ProgressBar","styled","_ref","width","height","backgroundColor","borderRadius","transition","colors","_jsxs","Stack","spacing","xs","sm","direction","children","_jsx","ProgressBarStyled","setLocale","mixed","required","i18n","t","string","min","strongPattern","mediumPattern","defaultValues","password","validation","object","shape","test","value","this","createError","message","progress","TestSection","position","top","left","transform","useTranslation","_useState","useState","_useState2","_slicedToArray","values","setValues","_useState3","_useState4","setMessage","_useForm","useForm","mode","resolver","yupResolver","register","_useForm$formState","formState","errors","isValid","reset","useEffect","_errors$password","_errors$password2","type","alignItems","justifyContent","Input","_objectSpread","name","size","autoFocus","Typography","variant","color","align","Button","disabled","onClick"],"sourceRoot":""}